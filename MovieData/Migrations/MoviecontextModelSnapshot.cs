// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieData.Models;

namespace MovieData.Migrations
{
    [DbContext(typeof(Moviecontext))]
    partial class MoviecontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieData.Models.Adminentity", b =>
                {
                    b.Property<int>("adminid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adminemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminpassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminsecans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminsecque")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("adminid");

                    b.ToTable("adminentites");
                });

            modelBuilder.Entity("MovieData.Models.Customerentity", b =>
                {
                    b.Property<int>("custid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("custemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custpassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custsecans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custsecque")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("custid");

                    b.ToTable("customerentities");
                });

            modelBuilder.Entity("MovieData.Models.Movieentity", b =>
                {
                    b.Property<int>("movieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("moviebudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moviecategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moviedescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieduration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movielanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movielead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moviename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("movierating")
                        .HasColumnType("float");

                    b.Property<int>("movieyear")
                        .HasColumnType("int");

                    b.HasKey("movieid");

                    b.ToTable("movieentities");
                });
#pragma warning restore 612, 618
        }
    }
}
